#!/usr/bin/env python

import sys

input_sep = ','


def collect_inputs():

    files = [file(x) for x in sys.argv[1:] if x != '-']
    if len(sys.argv) <= 1 or '-' in sys.argv or not sys.stdin.isatty():
        files.append(sys.stdin)

    return files


# find the maximum string length in each column
find_lengths = lambda d: reduce(lambda x, s: map(max, x, map(len, s)), d, [])

# get all lines with >1 entry, and split them
# read_file = lambda fin: filter(lambda l: len(l) > 1, [line.strip().split(input_sep) for line in fin])
read_file = lambda fin: [line.strip().split(input_sep) for line in fin]

def main():

    input_files = collect_inputs()

    for fin in input_files:

        data = read_file(fin)
        lens = find_lengths(filter(lambda l: len(l) > 1, data))

        if len(input_files) > 1:
            print "==> %s <==" % fin.name

        for line in data:
            for x,l in zip(line, lens):
                print x.rjust(l+1),
            print

        if len(input_files) > 1:
            print


if __name__ == '__main__':
    try:
        main()
    except IOError:
        # ignore e.g. broken pipe if we don't eat all the output
        pass

